import Head from "next/head";
import {
  Box,
  Button,
  Card,
  TextField,
  Typography,
} from "@mui/material";
import { Form, Formik } from "formik";
import * as Yup from "yup";
import BaseLayout from "src/layouts/BaseLayout";
import { signIn } from "next-auth/react";
import { getSession } from "next-auth/react";


function Home() {
  return (
    <>
      <Head>
        <title>Assessment</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BaseLayout>
        <Card
          sx={{
            p: "20px",
            textAlign: "center",
            background: "#fff",
            width: "630px",
          }}
        >
          <Typography
            variant="h2"
            sx={{ fontWeight: "700", marginTop: "30px", fontSize: "30px" }}
          >
            Sign In
          </Typography>
          <Typography
            sx={{
              color: "223354b3",
              fontSize: "16px",
              fontWeight: "normal",
              marginTop: "6px",
            }}
          >
            Fill in the fields below to sign into your account.
          </Typography>
          <Formik
            initialValues={{
              email: "",
              password: "",
            }}
            validationSchema={Yup.object({
              email: Yup.string()
                .email("The email provided should be a valid email address")
                .max(255)
                .required("The email field is required"),
              password: Yup.string()
                .max(255)
                .required("The password field is required"),
            })}
            onSubmit={(values) => {
              const credential = {
                email: values.email,
                password: values.password,
                redirect: true,
                callbackUrl: '/'
              };
              signIn('credentials',credential);
            }}
          >
            {({
              values,
              touched,
              errors,
              handleChange,
              handleBlur,
              handleSubmit,
            }) => (
              <>
                <Box>
                  <Form>
                    <Box>
                      <TextField
                        fullWidth
                        name="email"
                        id="email"
                        type="email"
                        value={values.email}
                        onChange={handleChange}
                        onBlur={handleBlur}
                        error={Boolean(touched.email && errors.email)}
                        helperText={touched.email && errors.email}
                        placeholder="Enter Your Email"
                        sx={{ mt: "10px", maxWidth: "500px" }}
                        label="Email"
                        variant="outlined"
                      />
                    </Box>
                    <Box>
                      <TextField
                        fullWidth
                        type="password"
                        name="password"
                        id="password"
                        value={values.password}
                        onChange={handleChange}
                        onBlur={handleBlur}
                        error={Boolean(touched.password && errors.password)}
                        helperText={touched.password && errors.password}
                        placeholder="Enter Your Password"
                        sx={{ mt: "10px", maxWidth: "500px" }}
                        label="Password"
                        variant="outlined"
                      />
                    </Box>
                    <Button
                      sx={{
                        background: "#5569ff",
                        color: "#fff",
                        mt: "10px",
                        "&:hover": {
                          background: "#5569ff",
                        },
                        width: "200px",
                        height: "40px",
                      }}
                      type="submit"
                      onClick={handleSubmit}
                    >
                      Sign In
                    </Button>
                  </Form>
                </Box>
              </>
            )}
          </Formik>
        </Card>
        </BaseLayout>
    </>
  );
}
export default Home;

export async function getServerSideProps(context){
  const session = await getSession(context);
  if(session){
    return {
      redirect: {
        permanent: false,
        destination: '/demo'
      }
    }
  }
  return {
    props :{}
  }
}